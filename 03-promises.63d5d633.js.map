{"version":3,"sources":["js/03-promises.js"],"names":["form","document","querySelector","onSubmitClick","evt","preventDefault","firstDelay","target","value","step","amount","delay","i","createPromise","then","position","setTimeout","console","log","catch","promise","Promise","resolve","reject","Math","random","addEventListener"],"mappings":";AAAA,MAAMA,EAAOC,SAASC,cAAc,SAWpC,SAASC,EAAcC,GACrBA,EAAIC,iBAEEC,MAAAA,EAAaF,EAAIG,OAAO,GAAGC,MAE3BC,EAAOL,EAAIG,OAAO,GAAGC,MACrBE,EAASN,EAAIG,OAAO,GAAGC,MACzBG,IAAAA,EAAQL,EAEN,IAAA,IAAIM,EAAI,EAAGA,GAAKF,EAAQE,GAAI,EAChCC,EAAcD,EAAID,GACfG,KAAK,EAAGC,SAAAA,EAAUJ,MAAAA,KAAYK,WAAW,KACxCC,QAAQC,2BAA2BH,QAAeJ,SAChDA,GACHQ,MAAM,EAAGJ,SAAAA,EAAUJ,MAAAA,KAAYK,WAAW,KACzCC,QAAQC,0BAA0BH,QAAeJ,SAC/CA,GACJA,GAASF,EAIf,SAASI,EAAcE,EAAUJ,GASxBS,OARO,IAAIC,QAAQ,SAASC,EAASC,GACpBC,KAAKC,SAAW,GAEtCT,WAAW,KAAOM,EAAQ,CAAEP,SAAAA,EAAUJ,MAAAA,KACrCA,GACDK,WAAW,KAAOO,EAAO,CAAER,SAAAA,EAAUJ,MAAAA,KACpCA,KAtCLM,QAAQC,IAAIlB,GAQZA,EAAK0B,iBAAiB,SAAUvB","file":"03-promises.63d5d633.js","sourceRoot":"../src","sourcesContent":["const form = document.querySelector('.form');\nconsole.log(form);\n// const delay = document.querySelector('input[name=\"delay\"]');\n// console.log(delay);\n// const step = document.querySelector('input[name=\"step\"]');\n// console.log(step);\n// const amount = document.querySelector('input[name=\"amount\"]');\n// console.log(amount);\n\nform.addEventListener('submit', onSubmitClick);\n\nfunction onSubmitClick(evt) {\n  evt.preventDefault();\n\n  const firstDelay = evt.target[0].value;\n\n  const step = evt.target[1].value;\n  const amount = evt.target[2].value;\n  let delay = firstDelay;\n\n  for ( let i = 0; i <= amount; i +=1) {\n    createPromise(i , delay)\n      .then(({ position, delay }) => setTimeout(() => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      }), delay)\n      .catch(({ position, delay }) => setTimeout(() => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      }), delay)\n      delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  let promise = new Promise(function(resolve, reject) {\n    const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    setTimeout(() => {resolve({ position, delay })  \n  }, delay)} else {\n    setTimeout(() => {reject({ position, delay })\n  }, delay)  }\n  })\n  return promise\n  \n}\n"]}